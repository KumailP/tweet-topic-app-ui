{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","tweet","setTweet","_useState3","_useState4","loading","setLoading","_useState5","SVM","NB","LR","RF","MV","_useState6","pred","setPred","_useState7","_useState8","fetched","setFetched","categories","EN","ST","BN","PT","HT","ED","SP","SI","RI","GM","NW","WB","setPredictions","predictions","svm","naive_bayes","linear_model","majorityVotingResult","randomForest","react_default","a","createElement","className","placeholder","name","rows","onChange","e","target","value","type","onClick","length","axios","post","then","response","JSON","parse","data","catch","error","console","log","Fragment","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.25a0eb1f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [tweet, setTweet] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [pred, setPred] = useState({\n    SVM: \"\",\n    NB: \"\",\n    LR: \"\",\n    RF: \"\",\n    MV: \"\"\n  });\n  const [fetched, setFetched] = useState(false);\n\n  const predict = () => {\n    if (!tweet || tweet.length < 3) return;\n\n    setLoading(true);\n    setFetched(false);\n    axios\n      .post(\"http://ec2-54-209-150-58.compute-1.amazonaws.com:4000/api\", {\n        tweet\n      })\n      .then(response => {\n        setPredictions(JSON.parse(response.data));\n      })\n      .catch(error => {\n        console.log(error);\n        setFetched(false);\n        setLoading(false);\n      });\n  };\n\n  const categories = {\n    EN: \"Entertainment\",\n    ST: \"Science & Technology\",\n    BN: \"Business\",\n    PT: \"Politics\",\n    HT: \"Health\",\n    ED: \"Education\",\n    SP: \"Sports\",\n    SI: \"Social Issues\",\n    RI: \"Religion\",\n    GM: \"General Admin & Management\",\n    NW: \"News\",\n    WB: \"Well Being\"\n  };\n\n  const setPredictions = pred => {\n    const predictions = {\n      SVM: categories[pred.svm],\n      NB: categories[pred.naive_bayes],\n      LR: categories[pred.linear_model],\n      MV: categories[pred.majorityVotingResult],\n      RF: categories[pred.randomForest]\n    };\n    setPred(predictions);\n    setLoading(false);\n    setFetched(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"tweet\">\n          <div className=\"tweet-main\">\n            <h1>Tweet Topic Prediction</h1>\n\n            <div className=\"tweet-container\">\n              <textarea\n                placeholder=\"Enter tweet...\"\n                name=\"tweet\"\n                rows=\"2\"\n                onChange={e => setTweet(e.target.value)}\n                value={tweet}\n                className=\"tweet-input\"\n              />\n              <button type=\"button\" onClick={predict} className=\"btn\">\n                Predict\n              </button>\n            </div>\n          </div>\n          {loading ? (\n            <div className=\"loader\" />\n          ) : fetched ? (\n            <>\n              <h2>Predictions</h2>\n              <div className=\"tweet-results\">\n                <div className=\"result-box model-SVM\">\n                  <span>\n                    <h2>Support Vector Classifier</h2>\n                  </span>\n                  <span>\n                    <p>{pred.SVM}</p>\n                  </span>\n                </div>\n                <div className=\"result-box model-LG\">\n                  <span>\n                    <h2>Logistic Regression</h2>\n                  </span>\n                  <span>\n                    <p>{pred.LR}</p>\n                  </span>\n                </div>\n                <div className=\"result-box model-NB\">\n                  <span>\n                    <h2>Naive Bayes Classifier</h2>\n                  </span>\n                  <span>\n                    <p>{pred.NB}</p>\n                  </span>\n                </div>\n\n                <div className=\"result-box model-NB\">\n                  <span>\n                    <h2>Random Forest</h2>\n                  </span>\n                  <span>\n                    <p>{pred.RF}</p>\n                  </span>\n                </div>\n              </div>\n              <div className=\"result-box model-NB\">\n                <span>\n                  <h2>Majority Voting Classifier</h2>\n                </span>\n                <span>\n                  <p>{pred.MV}</p>\n                </span>\n              </div>\n            </>\n          ) : null}\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}